# ---------------------------------- NodeConfig
# id of the node
#node.id=

# the consensus protocol that will be used for the node. valid options are 'bizur' or 'raft' (without single quotes)
#node.consensus.protocol=

# ---------------------------------- RaftConfig (extends NodeConfig)
# the initial election timeout for the node. This value will be modified internally based on node's id.
#raft.electionTimeoutMs=5000

# the interval that the node keeps checking for raft state machine internally and sends heartbeat messages.
#raft.updateIntervalMs=500

# ---------------------------------- BizurConfig (extends NodeConfig)
# total number of buckets to be used in the bizur alg.
#bizur.numBuckets=1

# the initial election timeout for the node. This value will be modified internally based on node's id.
#bizur.electionTimeoutMs=5000

# the interval that the node keeps checking for raft state machine internally and sends heartbeat messages.
#bizur.updateIntervalMs=500

# ---------------------------------- TransportConfig
# timeout for waiting a response per message.
#transport.message.callbackTimeoutMs=5000

# ---------------------------------- TcpTransportConfig (extends TransportConfig)
# pool size for clients assigned for each node.
# - if value equals 0 (zero), then clientPoolSize=(processor count * 2)
# - if value is less than 0, then clientPoolSize=unlimited. It is advisable to use this value since bizur nodes may
#   reach a deadlock state if not enough number of clients are present.
#transport.tcp.clientPoolSize=-1

# destinations for the tcp transport.
#transport.tcp.destinations=

# port to bind for the tcp server transport.
#transport.tcp.server.port=
